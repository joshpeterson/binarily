# Enable C++ support
language: cpp

stages:
  - prebuild
  - build
  - sanitizers
  - deploy

jobs:
  include:
    - stage: prebuild
      name: "Verify code formating"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/run-clang-format.py -r src test bench"
    - stage: prebuild
      name: "Static analysis"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/tidy"
    - stage: build
      name: "Clang 10"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; COMPILER=clang++ ./build"
    - stage: build
      name: "GCC 10"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/gcc bash -c "cd src; COMPILER=g++ ./build"
    - stage: build
      name: "Emscripten"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/emscripten bash -c "cd src;COMPILER=em++ ./build"
    - stage: sanitizers
      name: "Address sanitizer"
      sudo: required
      services:
        - docker
      script:
        - docker run --privileged -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/build-asan"
    - stage: sanitizers
      name: "Thread sanitizer"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/build-tsan"
    - stage: sanitizers
      name: "Undefined behavior sanitizer"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/build-ubsan"
    - stage: deploy
      name: "Deploy to Github Pages"
      if: branch = master
      sudo: required
      services:
        - docker
      before_install:
        - openssl aes-256-cbc -K $encrypted_189e52c2c347_key -iv $encrypted_189e52c2c347_iv -in deploy_key.enc -out deploy_key -d
        - docker run -dit --name emscripten -v $(pwd):/src petersonjm1/emscripten bash
      script:
        - docker exec -it emscripten bash -c "cd src; COMPILER=em++ ./tools/build-release"
        - docker exec -it emscripten bash -c "cd src; ./tools/deploy"
      deploy:
        provider: pages:git
        edge: true
        local_dir: artifacts/Releasen/deploy
        commit_message: Deploy from %{git_branch} at %{git_sha}
        deploy_key: deploy_key
