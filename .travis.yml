# Enable C++ support
language: cpp

stages:
  - format
  - static analysis
  - build
  - address sanitizer
  - thread sanitizer
  - undefined behavior sanitizer

jobs:
  include:
    - stage: format
      dist: trusty
      script: ./tools/run-clang-format.py -r src test bench
    - stage: static analysis
      dist: trusty
      env: TIDY=clang-tidy-6.0
      script: ./tools/tidy
    - stage: build
      os: osx
      script: ./build
    - stage: build
      os: linux
      sudo: required
      dist: trusty
      before_install: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - ninja-build
      env: COMPILER=clang++-6.0
      script: ./build
    - stage: build
      os: linux
      sudo: required
      dist: trusty
      before_install: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - ninja-build
      env: COMPILER=g++-7
      script: ./build
    - stage: build
      os: windows
      env:
        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
      script:
        - export PATH=$MSBUILD_PATH:$PATH
        - ./build.bat
    - stage: address sanitizer
      os: linux
      sudo: required
      dist: trusty
      before_install: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - ninja-build
      env: COMPILER=clang++-6.0
      script: ./tools/build-asan
    - stage: thread sanitizer
      os: linux
      sudo: required
      dist: trusty
      before_install: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - ninja-build
      env: COMPILER=clang++-6.0
      script: ./tools/build-tsan
    - stage: undefined behavior sanitizer
      os: linux
      sudo: required
      dist: trusty
      before_install: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - ninja-build
      env: COMPILER=clang++-6.0
      script: ./tools/build-ubsan

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-add-repository "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-add-repository "deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y --allow-unauthenticated libllvm6.0 libstdc++6 clang-format-6.0 clang-tidy-6.0; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ninja; fi
